{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3f658ef2708b4dda1aa9","webpack:///./src/index.js","webpack:///./src/core.js","webpack:///./src/fn/escapeReg.js","webpack:///./src/fn/root.js","webpack:///./src/fn/manipulate.js","webpack:///./src/fn/setAct.js","webpack:///./src/fn/revertTo.js","webpack:///./src/elmt.js","webpack:///./src/prop.js","webpack:///./src/aggregate.js","webpack:///./src/grep.js","webpack:///./src/process.js"],"names":[],"mappings":"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","file":"fibrio.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3f658ef2708b4dda1aa9\n **/","\nimport Finder from './core'\nimport './elmt'\nimport './prop'\nimport './aggregate'\nimport './grep'\nimport './process'\n\nlet Fibrio = ( ...arg ) => new Finder( ...arg )\n\nObject.assign( Fibrio, {\n  preset:  Finder.preset,\n  finder:  Finder,\n  fn:      Finder.prototype,\n  matches: Finder.matches,\n})\n\nFibrio.fibrio = Fibrio.version = Fibrio.fn.fibrio = Fibrio.fn.version = '@VERSION'\n\n// ES6 module:\nexport default Fibrio\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","\nimport escapeReg from './fn/escapeReg'\nimport root      from './fn/root'\nimport { prop }  from './fn/manipulate'\nimport setAct    from './fn/setAct'\nimport revertTo  from './fn/revertTo'\n\n// NPM modules:\nconst $ = IMPORT( 'cheerio' )\n\nclass Finder {\n  /**\n   * @constructor\n   * Create a new Finder instance with an HTML\n   * string to be processed.\n   *\n   * @param {String} HTML string\n   * @param {Boolean} [noPreset=false]\n   * @return {Fibrio} The instance itself\n   */\n  constructor( html, noPreset=false ) {\n    this.ohtml   = html\n    this.context = root( html )\n    this.phase   = []\n\n    if ( noPreset === true ) {\n      this.avoid = new Set()\n      this.bdry  = new Set()\n    }\n  }\n\n  /**\n   * Check if an element matches with the configured\n   * selector(s).\n   *\n   * @param {CheerioDOMObject|HTMLString}\n   *   The element to be checked with.\n   * @param {String}\n   *   The CSS selector(s) to test.\n   */\n  static matches( elmt, selector ) {\n    elmt = $( elmt )\n\n    if (\n      typeof elmt === 'object' &&\n      elmt.is &&\n      typeof elmt.is === 'function'\n    ) {\n      return elmt.is( selector )\n    }\n    return false\n  }\n\n  /**\n   * Return an array of the text aggregation\n   * of the root element.\n   *\n   */\n  get text() {\n    if ( typeof this.root === 'undefined' ) {\n      return this.aggregate()\n    }\n\n    let i   = this.context.length\n    let ret = []\n\n    while ( i-- ) {\n      ret.unshift( this.aggregate( this.context[ i ] ))\n    }\n    return ret\n  }\n\n  /**\n   * Return an array of the matched text with their\n   * metadata.\n   *\n   */\n  get match() {\n    if ( typeof this.root === 'undefined' ) {\n      return this.grep()\n    }\n\n    let i    = this.context.length\n    let ret  = []\n\n    while ( i-- ) {\n      ret.unshift(\n        this.grep(this.aggregate( this.context[ i ] ))\n      )\n    }\n    return ret\n  }\n\n  /**\n   * Return a string of the current HTML of the\n   * root element.\n   *\n   */\n  get html() {\n    return ( this.root || this.context ).html()\n      .replace( /<\\/?fibrio\\-text>/gi, '' )\n  }\n\n  /**\n   * Get the descendants of the root element or\n   * current set of matched elements—filtered by\n   * CSS selector(s)—which are the effected context\n   * for the next text-processing action.\n   *\n   * @param {String}\n   *   CSS selector(s) to filter descendants.\n   *\n   */\n  qsa( selector ) {\n    if ( !this.root ) {\n      this.root = this.context\n    }\n    this.context = this.context.find( selector )\n    return this\n  }\n\n  /**\n   * Indicate whether to re-use the existing portions\n   * while replacing a match with text or to place the\n   * the entire replacement in the first found match\n   * portion’s node.\n   *\n   * @param {String} [mode='retain']\n   *   Either 'retain' or 'first'.\n   */\n  mode( mode ) {\n    this.portionMode = /^first$/i.test( mode )\n    ? 'first'\n    : 'retain'\n    return this\n  }\n\n  /**\n   * The default function to be invoked during DOM\n   * traversing. Once the function returns *false*,\n   * the content of that element will be ignored.\n   *\n   * @param {CheerioDOMObject}\n   * @return {Boolean}\n   *   True if the node matches with CSS selectors in\n   *   `this.avoid` set.\n   */\n  filterFn( node ) {\n    const avoid = this.avoid || new Set()\n    if ( avoid.has( node::prop( 'name' )))  return false\n\n    const selector = Array.from( avoid )\n      .filter( s => !/^[\\w\\-]+$/i.test( s ))\n      .join( ',' )\n    return !Finder.matches( node, selector )\n  }\n\n  /**\n   * The default function to be invoked during DOM\n   * traversing. Once the function returns *true*,\n   * Finder will start a new context with the current\n   * element; otherwise, the previous text aggregation\n   * continues.\n   *\n   * @param {CheerioDOMObject}\n   * @return {Boolean}\n   *   True if the node matches with CSS selectors in\n   *   `this.bdry` set.\n   */\n  bdryFn( node ) {\n    const bdry = this.bdry || new Set()\n    if ( bdry.has( '*' ))                  return true\n    if ( bdry.has( node::prop( 'name' )))  return true\n\n    const selector = Array.from( bdry )\n      .filter( s => !/^[\\w\\-]+$/i.test( s ))\n      .join( ',' )\n    return Finder.matches( node, selector )\n  }\n\n  /**\n   * Add CSS selector(s) to the avoiding set that,\n   * when matched with certain elements during\n   * text-processing, the content of these elements\n   * will be ignored and remain the same.\n   *\n   * @param {String|Array} CSS selector(s)\n   */\n  addAvoid( selector ) {\n    if ( !this.hasOwnProperty( 'avoid' )) {\n      this.avoid = new Set( this.avoid )\n    }\n\n    this.avoid::setAct( 'add', selector )\n    return this\n  }\n\n  /**\n   * Remove certain avoiding CSS selector(s) or\n   * clear the entire avoiding CSS selector set.\n   *\n   * @param {String|Array|null}\n   *   CSS selector(s)\n   *   Or, if left blank, the method clears the entire\n   *   avoiding selector set.\n   */\n  removeAvoid( selector ) {\n    if ( !this.hasOwnProperty( 'avoid' )) {\n      this.avoid = new Set( this.avoid )\n    }\n\n    if ( typeof selector === 'undefined' ) {\n      this.bdry.clear()\n      return this\n    }\n\n    this.avoid::setAct( 'delete', selector )\n    return this\n  }\n\n  /**\n   * Add CSS selector(s) to the boundary set that,\n   * when matched with certain elements during\n   * text-processing, the content of these elements\n   * will form a new self-contained context that are\n   * not an aggregating entity with its previous\n   * sibling(s).\n   *\n   * @param {String|Array|null} CSS selector(s)\n   */\n  addBdry( selector ) {\n    if ( !this.hasOwnProperty( 'bdry' )) {\n      this.bdry = new Set( this.bdry )\n    }\n\n    this.bdry::setAct( 'add', selector )\n    return this\n  }\n\n  /**\n   * Remove certain boundary CSS selector(s) or\n   * clear the entire boundary CSS selector set.\n   *\n   * @param {String|Array|null}\n   *   CSS selector(s)\n   *   Or, if left blank, the method clears the entire\n   *   boundary selector set.\n   */\n  removeBdry( selector ) {\n    if ( !this.hasOwnProperty( 'bdry' )) {\n      this.bdry = new Set( this.bdry )\n    }\n\n    if ( typeof selector === 'undefined' ) {\n      this.bdry.clear()\n      return this\n    }\n\n    this.bdry::setAct( 'delete', selector )\n    return this\n  }\n\n  /**\n   * Set up the searching text pattern (regular expression),\n   * portion mode, text replacement and/or wrapper at once\n   * that will be later processed.\n   *\n   * @param {Object} Actions\n   * @return {Fibrio} The instance\n   */\n  action( action ) {\n    if ( typeof action !== 'object' )  return this\n    if ( action.mode )  this.mode( action.mode )\n    if ( action.find )  this.find( action.find )\n\n    this.wrapper     = action.wrap    || null\n    this.replacement = action.replace || null\n    this.newActionProcessed = false\n    return this\n  }\n\n  /**\n   * Set up the searching text pattern for text-processing.\n   *\n   * @param {String|RegExp}\n   * @param {Boolean} [returnMatch=false]\n   * @return {Fibrio|Array}\n   *   The instance or the matches (array) depends on\n   *   the second @param, `returnMatch`\n   */\n  find( regex, returnMatch=false ) {\n    this.pattern = regex\n    return returnMatch === true ? this.match : this\n  }\n\n  /**\n   * Replace the matched text with a configured replacement.\n   *\n   * @arg {RegExp|String} [find=this.find]\n   *   A pattern for the Finder to grep\n   * @arg {String|Function}\n   *   What to replace each match with\n   * @return {Fibrio}\n   *   The instance\n   */\n  replace( ...arg ) {\n    this.replacement = arg.pop()\n    this.wrapper     = null\n    this.newActionProcessed = false\n\n    if ( arg[0] )  this.find( arg[0] )\n    return this.process()\n  }\n\n  /**\n   * Wrap each matched text with a clone of\n   * the configured stencil element.\n   *\n   * @arg {RegExp|String} [find=this.find]\n   *   A pattern for the Finder to grep\n   * @arg {String|Function}\n   *   What to wrap each match with\n   * @return {Fibrio}\n   *   The instance\n   */\n  wrap( ...arg ) {\n    this.wrapper     = arg.pop()\n    this.replacement = null\n    this.newActionProcessed = false\n\n    if ( arg[0] )  this.find( arg[0] )\n    return this.process()\n  }\n\n  /**\n   * Process the previously defined text-processing\n   * (replacing/wrapping) actions in the instance.\n   *\n   * @return {Fibrio} The instance\n   */\n  process() {\n    if ( this.newActionProcessed === true )  return this\n\n    {\n      const cloned = typeof this.root !== 'undefined'\n        ? this.root.clone()\n        : null\n      this.phase.push({\n        html:    this.html,\n        root:    cloned,\n        context: cloned\n          ? cloned.find( this.context )\n          : null,\n      })\n    }\n\n    if ( typeof this.root === 'undefined' ) {\n      this.processMatch()\n    } else {\n      const context = this.context\n      let i = context.length\n\n      while ( i-- ) {\n        this.processMatch({\n          context: context.eq( i ),\n          match:   this.grep(this.aggregate( context[ i ] )),\n        })\n      }\n    }\n    this.newActionProcessed = true\n    return this\n  }\n\n  /**\n   * Process the previously defined text-processing\n   * (replacing/wrapping) actions in the instance\n   * and return the rendered HTML.\n   *\n   * @return {string}\n   *   The processed HTML of the context\n   */\n  render() {\n    this.process()\n    return this.html\n  }\n\n  /**\n   * Revert to the original state or a certain\n   * text-processing phase of the instance.\n   *\n   * @param {Number|String} [level=1]\n   *   The level — a number or a string of `all` —\n   *   to be reverted.\n   * @return {Fibrio}\n   *   The instance.\n   *\n   */\n  revert( level=1 ) {\n    level = typeof level === 'string' && level === 'all'\n    ? 'all'\n    : Number.parseInt( level, 10 )\n\n    if ( level === 1 ) {\n      this::revertTo( this.phase.pop() )\n      return this\n    }\n\n    let length  = this.phase.length\n\n    // If we’re to revert back to the original state.\n    if (\n      level === 'all' ||\n      level >= length ||\n      Number.isNaN( level )\n    ) {\n      this::revertTo( this.phase[0] )\n      this.phase = []\n      return this\n    }\n\n    this::revertTo( this.phase.splice( length - level, length )[0] )\n    return this\n  }\n}\n\nFinder.version = '@VERSION'\nFinder.fn      = Finder.prototype\n\nFinder.fn.filter = Finder.fn.query = Finder.fn.$ = Finder.fn.qsa\n\nexport default Finder\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core.js\n **/","\nconst escapeReg = str => new String( str ).replace(\n  /([\\.\\*\\+\\?\\^\\=\\!\\:\\$\\{\\}\\(\\)\\|\\[\\]\\/\\\\])/g,\n  '\\\\$1'\n)\n\nexport default escapeReg\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/fn/escapeReg.js\n **/","\nconst $    = IMPORT( 'cheerio' )\nconst root = html => $( `<fibrio-root>${html}</fibrio-root>` )\n\nexport default root\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/fn/root.js\n **/","\nconst $ = IMPORT( 'cheerio' )\n\nlet mani = {\n\n  prop( prop ) {\n    if ( prop === undefined || typeof this !== 'object' ) {\n      return undefined\n    } else if ( !this[0] && this[ prop ] ) {\n      return typeof this[ prop ] === 'function' ?\n        this[ prop ]() : this[ prop ]\n    } else if ( this[0] && this[0][ prop ] ) {\n      return this[0][ prop ]\n    }\n    return undefined\n  },\n\n  content() {\n    if ( this.children && Array.isArray( this.children )) {\n      return this.children\n    } else if ( typeof this.contents === 'function' ) {\n      return this.contents()\n    }\n    return [ null ]\n  },\n\n  type()   {  return this::mani.prop( 'type' )  },\n  first()  {  return this::mani.content()[0]  },\n  prev()   {  return this::mani.prop( 'prev' )  },\n  next()   {  return this::mani.prop( 'next' )  },\n  parent() {  return this::mani.prop( 'parent' )  },\n  html()   {  return $.html( this )  },\n\n  empty() {\n    if ( typeof this !== 'object' ) {\n      return\n    } else if ( typeof this.empty === 'function' ) {\n      return this.empty()\n    }\n\n    if ( this::mani.type() === 'text' ) {\n      this.data = ''\n    } else {\n      this.children = []\n    }\n\n    return this\n  },\n\n  before( content ) {\n    content = typeof content === 'string' ?\n      $( content ) : content\n\n    if ( typeof this !== 'object' ) {\n      return\n    } else if ( typeof this.before === 'function' ) {\n      return this.before.apply( this, content )\n    }\n\n    const parent = this.parent || this.root\n\n    if ( !parent || !Array.isArray( parent.children )) {\n      return\n    }\n\n    const idxBefore = parent.children.indexOf( this )\n    const idxAfter  = idxBefore + content.contents().length\n\n    this::mani.replaceWith(\n      `<fibrio-fake>${\n        $.html( content ) +\n        $.html( this )\n      }</fibrio-fake>`\n    )\n\n    parent.children = Array.from($(\n      $.html( parent ).replace( /<\\/?fibrio\\-fake>/gi, '' )\n    ).contents())\n\n    return parent.children[ idxAfter ]\n  },\n\n  rm() {\n    if ( typeof this !== 'object' ) {\n      return\n    } else if ( typeof this.remove === 'function' ) {\n      return this.remove()\n    }\n\n    const parent = this.parent || this.root\n\n    if ( !parent || !Array.isArray( parent.children )) {\n      return\n    }\n\n    let sib = parent.children\n    let idx = sib.indexOf( this )\n\n    if ( idx < 0 )  return\n    sib.splice( idx, 1 )\n    if ( this.prev )  this.prev.next = this.next\n    if ( this.next )  this.next.prev = this.prev\n    this.prev = this.next = this.parent = this.root = null\n    return this\n  },\n\n  replaceWith( content ) {\n    if ( typeof this !== 'object' ) {\n      return\n    } else if ( typeof this.replaceWith === 'function' ) {\n      return this.replaceWith( content )\n    }\n\n    const parent = this.parent || this.root\n\n    if ( !parent || !Array.isArray( parent.children )) {\n      return\n    }\n\n    let sib = parent.children\n    let idx = sib.indexOf( this )\n    let newNode = typeof content === 'string' ?\n      $( content ) : content\n\n    if ( idx < 0 )  return\n    if ( !newNode.type && newNode[0] )  newNode = newNode[0]\n\n    sib[ idx ] = newNode\n    return sib[ idx ]\n  },\n\n  createText( text ) {\n    return $( `<fibrio-text>${ text }</fibrio-text>` )\n  },\n}\n\nexport default mani\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/fn/manipulate.js\n **/","\nconst normalize = IMPORT( 'normalize-selector' )\nconst split     = IMPORT( 'split-css-selector' )\n\n/**\n * Add or delete elements of a set using CSS selectors.\n *\n * @this {Set}\n *   The set to be manipulate.\n * @param {String}\n *   Action to apply on the set, either 'add' or 'delete'.\n * @param {String|Array}\n *   CSS selector to be added to or deleted from the set.\n */\nexport default function( action, selector ) {\n  if ( !/^(add|delete)$/i.test( action )) {\n    return this\n  }\n\n  action = action.toLowerCase()\n\n  if ( typeof selector === 'string' ) {\n    selector = split( selector )\n  }\n  if ( selector && Array.isArray( selector )) {\n    selector.forEach( sel => this[ action ](normalize( sel )))\n  }\n  return this\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/fn/setAct.js\n **/","\nimport root from './root'\n\nexport default function( phase ) {\n  if ( !phase.context ) {\n    this.context = root( phase.html )\n    return\n  }\n  this.root    = phase.root\n  this.context = phase.context\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/fn/revertTo.js\n **/","\nimport Finder from './core'\n\n// HTML5 elements categorised by function:\n// http://www.w3.org/TR/html-markup/elements-by-function.html\n\nconst NON_TEXT = [\n  // Outside `<body>`:\n  'head', 'title',\n  // Line-breaks and rules:\n  'br', 'hr',\n  // Embeded content (media) and scripting:\n  'script', 'style', 'img', 'video', 'audio', 'canvas', 'svg', 'map', 'object',\n  // Forms:\n  'input', 'textarea', 'select', 'option', 'optgroup', 'button',\n]\n\nconst BDRY = [\n  // Grouping content and sections:\n  'body',\n  'address', 'article', 'aside', 'blockquote', 'dd', 'div',\n  'dl', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3',\n  'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'main', 'nav', 'noscript', 'ol',\n  'output', 'p', 'pre', 'section', 'ul',\n  // Other misc. elements:\n  'br', 'li', 'summary', 'dt', 'details', 'rp', 'rt', 'rtc',\n  // Embeded content (media) and scripting:\n  'script', 'style', 'img', 'video', 'audio', 'canvas', 'svg', 'map', 'object',\n  // Forms:\n  'input', 'textarea', 'select', 'option', 'optgroup', 'button',\n  // Tables:\n  'table', 'tbody', 'thead', 'th', 'tr', 'td', 'caption', 'col', 'tfoot', 'colgroup',\n]\n\nlet preset = { HTML5: {\n  NON_TEXT,\n  BDRY,\n}}\n\nObject.assign( Finder, { preset })\n\nexport default preset\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/elmt.js\n **/","\nimport Finder from './core'\n\nObject.assign( Finder.fn, {\n  portionMode: 'retain',\n  context:     undefined,\n  avoid:       new Set( Finder.preset.HTML5.NON_TEXT ),\n  bdry:        new Set( Finder.preset.HTML5.BDRY ),\n})\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/prop.js\n **/","\nimport Finder from './core'\nimport { type, first, next } from './fn/manipulate'\n\nObject.assign( Finder.fn, {\n  /**\n   * Get the text aggregation of a node w/o being\n   * normalized and resorting to `$node.text()`.\n   *\n   * @param {CheerioDOMObject}\n   * @return {Array}\n   *   An array of the text aggregation of the given node,\n   *   divided by boundaries, w/o the content of the\n   *   ignored elements.\n   */\n  aggregate( node=this.context ) {\n    // Found the text and return it.\n    if ( node::type() === 'text' )  return [ node.data ]\n\n    // Exclude unwanted elements.\n    if ( this.filterFn && !this.filterFn( node ))  return []\n\n    let ret = [ '' ]\n    let i   = 0\n\n    if ( node = node::first()) do {\n      if ( node::type() === 'text' ) {\n        ret[ i ] += node.data\n        continue\n      }\n\n      let innerText = this.aggregate( node )\n\n      if (\n        /^(tag|script|style)$/i.test( node::type()) &&\n        this.bdryFn && this.bdryFn( node )\n      ) {\n        ret[ ++i ] = innerText\n        ret[ ++i ] = ''\n      } else {\n        if ( typeof innerText[0] === 'string' ) {\n          ret[ i ] += innerText.shift()\n        }\n        if ( innerText.length > 0 ) {\n          ret[ ++i ] = innerText\n          ret[ ++i ] = ''\n        }\n      }\n    } while ( node = node::next())\n    return ret\n  },\n})\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/aggregate.js\n **/","\nimport Finder    from './core'\nimport escapeReg from './fn/escapeReg'\n\nObject.assign( Finder.fn, {\n  /**\n   * Gre(p) using the text aggregation.\n   *\n   * @param {Array}\n   *   Text aggragation.\n   * @return {Array}\n   *   The matches and their metadata.\n   */\n  grep( aggr=this.text ) {\n    const prepMat = this.prepMat\n    const regex   = typeof this.pattern === 'string'\n    ? new RegExp(escapeReg( this.pattern ), 'g' )\n    : this.pattern\n\n    let mat\n    let matIdx = 0\n    let offset = 0\n    let match  = []\n\n    void function matchAggr( aggr ) {\n      for ( let i = 0, l = aggr.length; i < l; ++i ) {\n        let text = aggr[ i ]\n\n        if ( typeof text !== 'string' ) {\n          // Deal with nested contexts:\n          matchAggr( text )\n          continue\n        }\n\n        if ( regex.global ) {\n          while ( mat = regex.exec( text )) {\n            match.push(prepMat( mat, matIdx++, offset ))\n          }\n        } else {\n          if ( mat = text.match( regex )) {\n            match.push(prepMat( mat, 0, offset ))\n          }\n        }\n        offset += text.length\n      }\n    }( aggr )\n\n    return match\n  },\n\n  /**\n   * Prepare metadata for single match array (returned\n   * by `RegExp.fn.exec` or `String.fn.match`).\n   *\n   * @param {Array}  Match\n   * @param {Number} Index of the match\n   * @param {Number} Offset of the match\n   *\n   * @return {Array}\n   *   The original match array with addtional metadata.\n   */\n  prepMat( mat, matIdx, offset ) {\n    if ( !mat[0] )  throw new Error( 'Fibrio cannot handle zero-length matches.' )\n\n    mat.idx      = mat.index\n    mat.startIdx = offset + mat.idx\n    mat.endIdx   = offset + mat.idx + mat[0].length\n\n    mat.idx = mat.index = matIdx\n    return mat\n  },\n})\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/grep.js\n **/","\nimport Finder from './core'\nimport {\n  prop, content, type, html,\n  parent, first, prev, next,\n  before, replaceWith,\n  createText,\n} from './fn/manipulate'\n\nconst $ = IMPORT( 'cheerio' )\n\nObject.assign( Finder.fn, {\n  /**\n   * Process (wrapping/replacing) the matched text\n   * with the previously defined wrapper and/or\n   * replacement.\n   *\n   * @return {Fibrio} The instance\n   */\n  processMatch( item={\n    match:   this.match,\n    context: this.context,\n  }) {\n    let match   = item.match\n    let context = item.context\n\n    if ( match.length === 0 )  return this\n\n    let startPortion\n    let endPortion\n    let innerPortion = []\n    let current      = context\n    let mat          = match.shift()\n    let atIdx        = 0\n    let matIdx       = 0\n    let portionIdx   = 0\n    let nodeStack    = [ context ]\n    let doAvoidNode\n\n    out: while ( true ) {\n      if ( current::type() === 'text' ) {\n        // The match end\n        if (\n          !endPortion &&\n          current.data.length + atIdx >= mat.endIdx\n        ) {\n          endPortion = {\n            node:         current,\n            idx:          portionIdx++,\n            index:        portionIdx,\n            text:         current.data.substring( mat.startIdx - atIdx, mat.endIdx - atIdx ),\n            idxInMat:     atIdx - mat.startIdx,\n            endIdxInNode: mat.endIdx - atIdx,\n            isEnd:        true,\n            // always zero for end-portions\n            idxInNode:    mat.startIdx - atIdx,\n          }\n\n        // Intersecting node\n        } else if ( startPortion ) {\n          innerPortion.push({\n            node:      current,\n            idx:       portionIdx++,\n            index:     portionIdx,\n            text:      current.data,\n            idxInMat:  atIdx - mat.startIdx,\n            // always zero for inner-portions\n            idxInNode: 0,\n          })\n        }\n\n        // The match start\n        if (\n          !startPortion &&\n          current.data.length + atIdx > mat.startIdx\n        ) {\n          startPortion = {\n            node:         current,\n            idx:          portionIdx++,\n            index:        portionIdx,\n            idxInMat:     0,\n            idxInNode:    mat.startIdx - atIdx,\n            endIdxInNode: mat.endIdx - atIdx,\n            text:         current.data.substring( mat.startIdx - atIdx, mat.endIdx - atIdx ),\n          }\n        }\n        atIdx += current.data.length\n      }\n\n      doAvoidNode = (\n        /^(tag|style|script)$/i.test( current::type()) &&\n        this.filterFn &&\n        !this.filterFn( current )\n      )\n\n      if ( startPortion && endPortion ) {\n        let old = Object.assign( {}, current )\n\n        // Method `.replaceMat()` returns the end portion node,\n        // and then we continue the recursion from its next\n        // sibling.\n        atIdx -= ( endPortion.node.data.length - endPortion.endIdxInNode )\n\n        current = this.replaceMat(\n          context, mat, startPortion, innerPortion, endPortion\n        )\n\n        startPortion = null\n        endPortion   = null\n        innerPortion = []\n        mat          = match.shift()\n        portionIdx   = 0\n        matIdx++\n\n        // No more matches.\n        if ( !mat )  break\n\n        // We have to update `nodeStack` once the current\n        // element is re-rendered from its parental side via\n        // `$parent.html( newHTML )` method.\n        if ( current.rerendered && !current::next()) {\n          // The `rerenderedLevel` variable here is to\n          // indicate how many level we have to go back.\n          let rerenderedLevel = 1\n          {\n            let cloned = Array.from( nodeStack )\n\n            cloned.shift() // Omit the root element.\n            cloned.pop()   // Omit current text node’s parent element.\n\n            while ( $.contains( cloned.pop(), old )) {\n              rerenderedLevel++\n            }\n          }\n\n          let len    = nodeStack.length\n          let last   = context.find( current )\n          let update = []\n\n          for ( let i = 0, l = rerenderedLevel; i < l; i++ ) {\n            last = last.parent()\n            update.unshift( last )\n          }\n\n          nodeStack.splice( len - rerenderedLevel, len )\n          nodeStack = nodeStack.concat( update )\n        }\n\n      // Move down:\n      } else if ( !doAvoidNode && current::first()) {\n        nodeStack.push( current )\n        current = current::first()\n        continue\n      // Move forward:\n      } else if ( !doAvoidNode && current::next()) {\n        current = current::next()\n        continue\n      }\n\n      while ( true ) {\n        // Move forward:\n        if ( current::next()) {\n          current = current::next()\n          break\n        }\n        // Move up (and move forward again):\n        current = nodeStack.pop()\n\n        // Done with the given context:\n        if ( current === context )  break out\n      }\n    }\n    return this\n  },\n\n  /**\n   * Replace the matched text portion(s) with the configured\n   * replacement (node/element) and return the endPortion\n   * node for `.processMatch()` to iterate.\n   *\n   * @return {CheerioDOMObject}\n   */\n  replaceMat( context, mat, startPortion, innerPortion, endPortion ) {\n    let matStartNode = startPortion.node\n    let matEndNode   = endPortion.node\n\n    let preceding  = ''\n    let following  = ''\n    let label      = [\n      `{{fibrio-replacement: ${Date.now()}}}`,\n      `{{fibrio-replacement: ${Date.now()}}}[[end]]`,\n    ]\n\n    if ( matStartNode === matEndNode ) {\n      let matNode = matStartNode\n      let data    = matNode.data\n      let matElmt = context.find( matNode::parent() )\n\n      if ( !matElmt[0] )  matElmt = context\n\n      let idx = matElmt[0].children.indexOf( matNode )\n      let replacement\n\n      // Grab the text before the match:\n      if ( startPortion.idxInNode > 0 ) {\n        preceding = data.substring( 0, startPortion.idxInNode )\n      }\n\n      // Get the processed replacement:\n      replacement = this.getPortionReplacementElmt(\n        endPortion, mat\n      )::html()\n\n      // Grab the text after the match:\n      if ( endPortion.endIdxInNode < data.length ) {\n        following = data.substring( endPortion.endIdxInNode )\n      }\n\n      matNode.data = label[0]\n\n      matElmt.html(\n        matElmt.html().replace(\n          label[0],\n          preceding + replacement + following\n        )\n      )\n\n      // Return the new node:\n      return matElmt.contents()[ preceding ? idx+1 : idx ]\n    } else {\n      // matStartNode -> matInnerNode -> matEndNode\n\n      let matStartElmt = context.find( matStartNode::parent() )\n      let matEndElmt   = context.find( matEndNode::parent() )\n      let areNotEqual  = true\n\n      if ( !matStartElmt[0] )  matStartElmt = context\n      if ( !matEndElmt[0] )    matEndElmt   = context\n\n      preceding = matStartNode.data.substring( 0, startPortion.idxInNode )\n      following  = matEndNode.data.substring( endPortion.endIdxInNode )\n\n      let first = this.getPortionReplacementElmt(\n        startPortion, mat\n      )::html()\n\n      for ( let i = 0 , l = innerPortion.length; i < l; ++i ) {\n        let portion = innerPortion[ i ]\n        portion.node::replaceWith(\n          this.getPortionReplacementElmt( portion, mat )\n        )\n      }\n\n      let last = this.getPortionReplacementElmt(\n        endPortion, mat\n      ).attr( 'data-fibrio-mat-elmt', 'last' )::html()\n\n      matStartNode.data = label[0]\n      matEndNode.data   = label[1]\n\n      matStartElmt.html(\n        matStartElmt.html()\n        .replace( label[0], preceding + first )\n        .replace( label[1], () => {\n          areNotEqual = false\n          return last + following\n        })\n      )\n\n      matEndElmt.html(\n        ( matEndElmt.html() || '' )\n        .replace( label[1], last + following )\n      )\n\n      let ret = ( areNotEqual ? matEndElmt : matStartElmt )\n        .find( '[data-fibrio-mat-elmt=\"last\"]' )\n        .removeAttr( 'data-fibrio-mat-elmt' )[0]\n\n      if ( !ret::next())  ret.rerendered = true\n      return ret\n    }\n  },\n\n  /**\n   * Get the replacement node/element according to the\n   * given portion.\n   *\n   * @return {CheerioDOMNode}\n   */\n  getPortionReplacementElmt( portion, mat, matIdx ) {\n    let replacement = this.replacement || '$&'\n    let wrapper     = this.wrapper\n\n    if (\n      wrapper &&\n      wrapper::prop( 'type' ) &&\n      wrapper::prop( 'type' ) !== 'text'\n    ) {\n      // Clone the element from its HTML:\n      wrapper = $( $.html( wrapper ))\n    }\n\n    if ( typeof replacement === 'function' ) {\n      replacement = replacement( portion, mat, matIdx )\n\n      if ( replacement && replacement::prop( 'type' )) {\n        return replacement\n      }\n\n      return createText( replacement )\n    }\n\n    let elmt = typeof wrapper === 'string'\n    ? /^<([\\w\\-]+)\\s?.*>.*<\\/\\1>$/gi.test( wrapper ) //// TODO: more accurate and strict.\n      ? $( wrapper )\n      : $( `<${wrapper}></${wrapper}>` )\n    : wrapper\n\n    replacement = createText(\n      this.prepReplacementString(\n        replacement, portion, mat, matIdx\n      )\n    )\n\n    if ( !replacement::first()::prop( 'data' )) {\n      return replacement\n    }\n    if ( !elmt ) {\n      return replacement\n    }\n\n    elmt.append( replacement )\n    return elmt\n  },\n\n  /**\n   * Work on the replacement (if passed a string) according\n   * to the given portion and returned the processed one.\n   *\n   * @return {String}\n   */\n  prepReplacementString( string, portion, mat, matIdx ) {\n    let mode = this.portionMode\n\n    if (\n      mode === 'first' &&\n      portion.idxInMat > 0\n    ) {\n      return ''\n    }\n\n    string = string.replace(\n      /\\$(\\d+|&|`|')/g,\n      ( _, t ) => {\n        let replacement\n\n        switch ( t ) {\n          // The entire match:\n          case '&':\n            replacement = mat[0]\n            break\n\n          // Text preceding the match:\n          case '`':\n            replacement = mat.input.substring( 0, mat.startIdx )\n            break\n\n          // Text following the match:\n          case '\\'':\n            replacement = mat.input.substring( mat.endIdx )\n            break\n\n          // `0`: The entire match; or,\n          // `n`: Captured groups (parenthesised submatches):\n          default:\n            replacement = mat[ +t ]\n        }\n        return replacement\n      }\n    )\n\n    if ( mode === 'first' )  return string\n    if ( portion.isEnd ) {\n      return string.substring( portion.idxInMat )\n    }\n    return string.substr( portion.idxInMat, portion.text.length )\n  },\n})\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/process.js\n **/"],"sourceRoot":""}